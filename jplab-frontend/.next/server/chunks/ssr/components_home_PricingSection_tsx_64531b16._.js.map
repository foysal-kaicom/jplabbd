{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/akib/kaicom/jplabbd/jplab-frontend/components/home/PricingSection.tsx"],"sourcesContent":["\"use client\";\nimport axios from \"@/utils/axios\";\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"sonner\";\nimport parse from \"html-react-parser\";\nimport { useRouter } from \"next/navigation\";\nimport { useAuthStore } from \"@/stores/useAuthStore\";\nimport Link from \"next/link\";\n\n// Define plan type\ninterface Plan {\n  id: number;\n  name: string;\n  price: string;\n  description: string;\n  short_description: string;\n  is_popular?: boolean;\n}\n\nconst defaultPlans: Plan[] = [];\n\nconst PricingSection = () => {\n  const router = useRouter();\n  const { isAuthenticated } = useAuthStore();\n  const [plansData, setPlansData] = useState<Plan[]>(defaultPlans);\n\n  // modal state\n  const [selectedPlan, setSelectedPlan] = useState<Plan | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [agreed, setAgreed] = useState(false);\n\n  const getPlansData = async () => {\n    try {\n      const response = await axios.get<{ success: boolean; data: Plan[] }>(\n        `${process.env.NEXT_PUBLIC_API_BASE_URL}/subscriptions?is_home=1`\n      );\n      if (response?.data?.success) {\n        setPlansData(response.data.data);\n      }\n    } catch (error: any) {\n      toast.error(\n        error?.response?.data?.message ||\n          \"Can not get subscription plans at this moment\"\n      );\n    }\n  };\n\n  useEffect(() => {\n    getPlansData();\n  }, []);\n\n  const subscribeModal = (plan: Plan) => {\n    if (!isAuthenticated) {\n      router.push(`/sign_in?redirecturl=packages`);\n      return;\n    }\n    setSelectedPlan(plan);\n    setIsModalOpen(true);\n  };\n\n  const handleSubscribe = async (plan: Plan) => {\n    try {\n      const response = await axios.post(\n        `${process.env.NEXT_PUBLIC_API_BASE_URL}/subscribe`,\n        { package_id: plan.id }\n      );\n      const url = response?.data?.url;\n      if (\n        response.status === 200 &&\n        response?.data?.status === \"success\" &&\n        typeof url === \"string\" &&\n        /^https?:\\/\\/.+/.test(url)\n      ) {\n        window.location.href = url;\n        toast.success(response?.data?.message || \"Subscription successful\");\n      } else {\n        toast.success(response?.data?.message || \"Subscription successful\");\n      }\n    } catch (error: any) {\n      toast.error(\n        error?.response?.data?.message || error.message || \"Subscription failed\"\n      );\n    }\n  };\n\n  return (\n    <section\n      id=\"pricing\"\n      className=\"py-20 bg-gradient-to-br from-gray-50 to-blue-50\"\n    >\n      <div className=\"container mx-auto px-4 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            Choose Your <span className=\"text-blue-600\">Learning Path</span>\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Select the perfect plan to accelerate your Japanese language\n            learning journey.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-3 gap-8 max-w-5xl mx-auto\">\n          {plansData.map((plan) => (\n            <div\n              key={plan.id}\n              className={`bg-white rounded-3xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 relative ${\n                plan.is_popular ? \"ring-4 ring-blue-200 relative\" : \"\"\n              }`}\n            >\n              {plan.is_popular && (\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                  <span className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-2 rounded-full text-sm font-semibold\">\n                    Most Popular\n                  </span>\n                </div>\n              )}\n\n              <div className=\"text-center mb-8\">\n                <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                  {plan.name}\n                </h3>\n                <div className=\"mb-4\">\n                  <span className=\"text-4xl font-bold text-gray-900\">\n                    {plan.price}\n                  </span>\n                </div>\n                <span>\n                  {plan.short_description && parse(plan.short_description)}\n                </span>\n              </div>\n\n              <div className=\"space-y-4 mb-12\">\n                <p className=\"text-gray-600\">\n                  {plan.description && parse(plan.description)}\n                </p>\n              </div>\n\n              <div className=\"w-full absolute bottom-3 flex justify-center\">\n                <button\n                className={`w-full py-4 px-6 rounded-full font-semibold transition-all duration-300 mr-16 ${\n                  plan.is_popular\n                    ? \"bg-gradient-to-r from-blue-600 to-purple-600 text-white hover:shadow-xl transform hover:scale-105\"\n                    : \"bg-blue-600 text-white hover:bg-blue-700\"\n                }`}\n                onClick={() => subscribeModal(plan)}\n              >\n                Subscribe\n              </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Modal Start */}\n        {isModalOpen && selectedPlan && (\n          <div\n            className=\"fixed bg-gray bg-opacity-50 backdrop-blur-sm inset-0 flex items-center justify-center z-50\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setSelectedPlan(null);\n              setAgreed(false);\n            }}\n          >\n            <div\n              className=\"bg-white rounded-xl shadow-lg max-w-md w-full p-6 relative\"\n              onClick={(e) => e.stopPropagation()} // stop closing when clicking inside modal\n            >\n              {/* Cross button */}\n              <button\n                className=\"absolute top-3 right-3 text-gray-500 hover:text-gray-800\"\n                onClick={() => {\n                  setIsModalOpen(false);\n                  setSelectedPlan(null);\n                  setAgreed(false);\n                }}\n              >\n                ✕\n              </button>\n\n              <h3 className=\"text-2xl font-bold mb-4\">Confirm Subscription</h3>\n              <p className=\"text-gray-700 mb-4\">\n                Are you sure you want to subscribe to{\" \"}\n                <span className=\"font-semibold\">{selectedPlan.name}</span>?\n              </p>\n\n              <label className=\"flex items-center mb-6 space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  className=\"w-4 h-4 text-blue-600 border-gray-300 rounded\"\n                  checked={agreed}\n                  onChange={() => setAgreed(!agreed)}\n                />\n                <span className=\"text-sm text-gray-600\">\n                  I agree to the{\" \"}\n                  <Link href=\"/terms\" className=\"text-blue-600 underline\">\n                    Terms and Conditions\n                  </Link>\n                </span>\n              </label>\n\n              <div className=\"flex justify-end space-x-3\">\n                <button\n                  className=\"px-4 py-2 rounded-lg bg-gray-200 text-gray-700 hover:bg-gray-300\"\n                  onClick={() => {\n                    setIsModalOpen(false);\n                    setSelectedPlan(null);\n                    setAgreed(false);\n                  }}\n                >\n                  Cancel\n                </button>\n                <button\n                  disabled={!agreed}\n                  className={`px-4 py-2 rounded-lg font-semibold ${\n                    agreed\n                      ? \"bg-blue-600 text-white hover:bg-blue-700\"\n                      : \"bg-blue-300 text-white cursor-not-allowed\"\n                  }`}\n                  onClick={() => {\n                    if (selectedPlan) handleSubscribe(selectedPlan);\n                    setIsModalOpen(false);\n                    setSelectedPlan(null);\n                    setAgreed(false);\n                  }}\n                >\n                  Confirm\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Modal End */}\n\n        <div className=\"text-center mt-12\">\n          <p className=\"text-gray-600 mb-4\">\n            All plans include a 14-day free trial • No credit card required\n          </p>\n          <div className=\"flex justify-center items-center space-x-4 text-sm text-gray-500\">\n            <span>✓ Cancel anytime</span>\n            <span>✓ Money-back guarantee</span>\n            <span>✓ 24/7 support</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PricingSection;\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;;AAmBA,MAAM,eAAuB,EAAE;AAE/B,MAAM,iBAAiB;IACrB,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,EAAE,eAAe,EAAE,GAAG,IAAA,sIAAY;IACxC,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAS;IAEnD,cAAc;IACd,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAc;IAC9D,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAC;IAErC,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,WAAW,MAAM,yHAAK,CAAC,GAAG,CAC9B,oEAAwC,wBAAwB,CAAC;YAEnE,IAAI,UAAU,MAAM,SAAS;gBAC3B,aAAa,SAAS,IAAI,CAAC,IAAI;YACjC;QACF,EAAE,OAAO,OAAY;YACnB,iJAAK,CAAC,KAAK,CACT,OAAO,UAAU,MAAM,WACrB;QAEN;IACF;IAEA,IAAA,kNAAS,EAAC;QACR;IACF,GAAG,EAAE;IAEL,MAAM,iBAAiB,CAAC;QACtB,IAAI,CAAC,iBAAiB;YACpB,OAAO,IAAI,CAAC,CAAC,6BAA6B,CAAC;YAC3C;QACF;QACA,gBAAgB;QAChB,eAAe;IACjB;IAEA,MAAM,kBAAkB,OAAO;QAC7B,IAAI;YACF,MAAM,WAAW,MAAM,yHAAK,CAAC,IAAI,CAC/B,oEAAwC,UAAU,CAAC,EACnD;gBAAE,YAAY,KAAK,EAAE;YAAC;YAExB,MAAM,MAAM,UAAU,MAAM;YAC5B,IACE,SAAS,MAAM,KAAK,OACpB,UAAU,MAAM,WAAW,aAC3B,OAAO,QAAQ,YACf,iBAAiB,IAAI,CAAC,MACtB;gBACA,OAAO,QAAQ,CAAC,IAAI,GAAG;gBACvB,iJAAK,CAAC,OAAO,CAAC,UAAU,MAAM,WAAW;YAC3C,OAAO;gBACL,iJAAK,CAAC,OAAO,CAAC,UAAU,MAAM,WAAW;YAC3C;QACF,EAAE,OAAO,OAAY;YACnB,iJAAK,CAAC,KAAK,CACT,OAAO,UAAU,MAAM,WAAW,MAAM,OAAO,IAAI;QAEvD;IACF;IAEA,qBACE,8OAAC;QACC,IAAG;QACH,WAAU;kBAEV,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;;gCAAwC;8CACxC,8OAAC;oCAAK,WAAU;8CAAgB;;;;;;;;;;;;sCAE9C,8OAAC;4BAAE,WAAU;sCAA0C;;;;;;;;;;;;8BAMzD,8OAAC;oBAAI,WAAU;8BACZ,UAAU,GAAG,CAAC,CAAC,qBACd,8OAAC;4BAEC,WAAW,CAAC,uHAAuH,EACjI,KAAK,UAAU,GAAG,kCAAkC,IACpD;;gCAED,KAAK,UAAU,kBACd,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAK,WAAU;kDAAuG;;;;;;;;;;;8CAM3H,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDACX,KAAK,IAAI;;;;;;sDAEZ,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDAAK,WAAU;0DACb,KAAK,KAAK;;;;;;;;;;;sDAGf,8OAAC;sDACE,KAAK,iBAAiB,IAAI,IAAA,mLAAK,EAAC,KAAK,iBAAiB;;;;;;;;;;;;8CAI3D,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAE,WAAU;kDACV,KAAK,WAAW,IAAI,IAAA,mLAAK,EAAC,KAAK,WAAW;;;;;;;;;;;8CAI/C,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCACD,WAAW,CAAC,8EAA8E,EACxF,KAAK,UAAU,GACX,sGACA,4CACJ;wCACF,SAAS,IAAM,eAAe;kDAC/B;;;;;;;;;;;;2BAzCI,KAAK,EAAE;;;;;;;;;;gBAkDjB,eAAe,8BACd,8OAAC;oBACC,WAAU;oBACV,SAAS;wBACP,eAAe;wBACf,gBAAgB;wBAChB,UAAU;oBACZ;8BAEA,cAAA,8OAAC;wBACC,WAAU;wBACV,SAAS,CAAC,IAAM,EAAE,eAAe;;0CAGjC,8OAAC;gCACC,WAAU;gCACV,SAAS;oCACP,eAAe;oCACf,gBAAgB;oCAChB,UAAU;gCACZ;0CACD;;;;;;0CAID,8OAAC;gCAAG,WAAU;0CAA0B;;;;;;0CACxC,8OAAC;gCAAE,WAAU;;oCAAqB;oCACM;kDACtC,8OAAC;wCAAK,WAAU;kDAAiB,aAAa,IAAI;;;;;;oCAAQ;;;;;;;0CAG5D,8OAAC;gCAAM,WAAU;;kDACf,8OAAC;wCACC,MAAK;wCACL,WAAU;wCACV,SAAS;wCACT,UAAU,IAAM,UAAU,CAAC;;;;;;kDAE7B,8OAAC;wCAAK,WAAU;;4CAAwB;4CACvB;0DACf,8OAAC,uKAAI;gDAAC,MAAK;gDAAS,WAAU;0DAA0B;;;;;;;;;;;;;;;;;;0CAM5D,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,WAAU;wCACV,SAAS;4CACP,eAAe;4CACf,gBAAgB;4CAChB,UAAU;wCACZ;kDACD;;;;;;kDAGD,8OAAC;wCACC,UAAU,CAAC;wCACX,WAAW,CAAC,mCAAmC,EAC7C,SACI,6CACA,6CACJ;wCACF,SAAS;4CACP,IAAI,cAAc,gBAAgB;4CAClC,eAAe;4CACf,gBAAgB;4CAChB,UAAU;wCACZ;kDACD;;;;;;;;;;;;;;;;;;;;;;;8BAUT,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;sCAAqB;;;;;;sCAGlC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;8CAAK;;;;;;8CACN,8OAAC;8CAAK;;;;;;8CACN,8OAAC;8CAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlB;uCAEe","debugId":null}}]
}